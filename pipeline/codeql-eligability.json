{
	"name": "codeql-eligability",
	"properties": {
		"activities": [
			{
				"name": "Get Repositories",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT * \nFROM repositories\nWHERE [date] = CONVERT(varchar, GETDATE(), 110)",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "sql_repositories",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Get Token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get Repositories",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://data-pipeline-vault.vault.azure.net/secrets/github-pat/bea807beedad4792aefc47330a9d519e?api-version=7.0",
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "For Each Repository",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Repositories').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get Repository Languages",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@item().languages_url",
									"type": "Expression"
								},
								"method": "GET",
								"headers": {
									"User-Agent": "azure-data-factory",
									"Authorization": {
										"value": "@activity('Get Token').output.value",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "CodeQL Supported Languages",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Repository Languages",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@or(\n    or(\n        or(\n            or(\n                or(\n                    or(\n                        or(\n                            or(not(equals(activity('Get Repository Languages').output?.JavaScript, null)), not(equals(activity('Get Repository Languages').output?.TypeScript, null))),\n                        not(equals(activity('Get Repository Languages').output?.Python, null))),\n                    not(equals(activity('Get Repository Languages').output?.Ruby, null))),\n                not(equals(activity('Get Repository Languages').output?.Java, null))),\n            not(equals(activity('Get Repository Languages').output?.Go, null))),\n        not(equals(activity('Get Repository Languages').output?.C, null))),\n    not(equals(activity('Get Repository Languages').output?.C++, null))),\nnot(equals(activity('Get Repository Languages').output?.C#, null)))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Script1",
										"type": "Script",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "data",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "NonQuery",
													"text": "UPDATE repositories SET codeql_configured = 1 WHERE [date] = CONVERT(varchar, GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'Central Standard Time', 110) AND id = @{item().id}"
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"codeql_configured": {
				"type": "String"
			}
		},
		"annotations": []
	}
}